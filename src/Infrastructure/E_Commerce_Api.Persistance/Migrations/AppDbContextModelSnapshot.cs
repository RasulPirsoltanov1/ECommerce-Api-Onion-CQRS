// <auto-generated />
using System;
using E_Commerce_Api.Persistance.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Commerce_Api.Persistance.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CategoryProduct");
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 1, 11, 17, 38, 16, 105, DateTimeKind.Utc).AddTicks(2517),
                            IsDeleted = false,
                            Name = "Kompyuterlər, Avtomobil & Filmlər"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 1, 11, 17, 38, 16, 105, DateTimeKind.Utc).AddTicks(2595),
                            IsDeleted = false,
                            Name = "uşaq üçün & Ev"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 1, 11, 17, 38, 16, 105, DateTimeKind.Utc).AddTicks(2616),
                            IsDeleted = false,
                            Name = "bəzək & Ev"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 1, 11, 17, 38, 16, 105, DateTimeKind.Utc).AddTicks(2627),
                            IsDeleted = false,
                            Name = "Ayyaqqabı"
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2024, 1, 11, 17, 38, 16, 105, DateTimeKind.Utc).AddTicks(2646),
                            IsDeleted = false,
                            Name = "oyunlar & musiqi"
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2024, 1, 11, 17, 38, 16, 105, DateTimeKind.Utc).AddTicks(2672),
                            IsDeleted = false,
                            Name = "bəzək, Səhiyyə & Səhiyyə"
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2024, 1, 11, 17, 38, 16, 105, DateTimeKind.Utc).AddTicks(2683),
                            IsDeleted = false,
                            Name = "Kitablar"
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2024, 1, 11, 17, 38, 16, 105, DateTimeKind.Utc).AddTicks(2707),
                            IsDeleted = false,
                            Name = "Avtomobil, uşaq üçün & İdman"
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2024, 1, 11, 17, 38, 16, 105, DateTimeKind.Utc).AddTicks(2731),
                            IsDeleted = false,
                            Name = "садинструмент, Ev & Kompyuterlər"
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2024, 1, 11, 17, 38, 16, 105, DateTimeKind.Utc).AddTicks(2744),
                            IsDeleted = true,
                            Name = "Kompyuterlər"
                        });
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Priorty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 1, 11, 17, 38, 16, 105, DateTimeKind.Utc).AddTicks(6565),
                            IsDeleted = false,
                            Name = "Electric",
                            ParentId = 0,
                            Priorty = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 1, 11, 17, 38, 16, 105, DateTimeKind.Utc).AddTicks(6567),
                            IsDeleted = false,
                            Name = "Moda",
                            ParentId = 0,
                            Priorty = 2
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 1, 11, 17, 38, 16, 105, DateTimeKind.Utc).AddTicks(6570),
                            IsDeleted = false,
                            Name = "Computers",
                            ParentId = 1,
                            Priorty = 1
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 1, 11, 17, 38, 16, 105, DateTimeKind.Utc).AddTicks(6572),
                            IsDeleted = false,
                            Name = "Women",
                            ParentId = 2,
                            Priorty = 1
                        });
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreateDate = new DateTime(2024, 1, 11, 17, 38, 16, 109, DateTimeKind.Utc).AddTicks(9225),
                            Description = "Perferendis reprehenderit accusamus eligendi cumque.",
                            IsDeleted = false,
                            Title = "Accusamus."
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CreateDate = new DateTime(2024, 1, 11, 17, 38, 16, 109, DateTimeKind.Utc).AddTicks(9320),
                            Description = "Hic cum libero dolores sed.",
                            IsDeleted = true,
                            Title = "Ipsa."
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            CreateDate = new DateTime(2024, 1, 11, 17, 38, 16, 112, DateTimeKind.Utc).AddTicks(3055),
                            Description = "Modi quia perferendis sint aut.",
                            IsDeleted = false,
                            Title = "Sunt."
                        });
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CreateDate = new DateTime(2024, 1, 11, 21, 38, 16, 119, DateTimeKind.Local).AddTicks(2754),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            Discount = 7.281794939205538m,
                            IsDeleted = false,
                            Price = 508.30m,
                            Title = "Fantastik Rezin Kompyuter"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 3,
                            CreateDate = new DateTime(2024, 1, 11, 21, 38, 16, 119, DateTimeKind.Local).AddTicks(2980),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            Discount = 2.900216720200555m,
                            IsDeleted = false,
                            Price = 215.44m,
                            Title = "Kobud Ağac Kəmər"
                        });
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("E_Commerce_Api.Domain.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce_Api.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Detail", b =>
                {
                    b.HasOne("E_Commerce_Api.Domain.Entities.Category", "Category")
                        .WithMany("Details")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Product", b =>
                {
                    b.HasOne("E_Commerce_Api.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Category", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
