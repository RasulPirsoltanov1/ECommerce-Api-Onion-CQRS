// <auto-generated />
using System;
using E_Commerce_Api.Persistance.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Commerce_Api.Persistance.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240112203649_product_category_table")]
    partial class product_category_table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 1, 12, 20, 36, 48, 848, DateTimeKind.Utc).AddTicks(9139),
                            IsDeleted = false,
                            Name = "Filmlər, bəzək & musiqi"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 1, 12, 20, 36, 48, 848, DateTimeKind.Utc).AddTicks(9209),
                            IsDeleted = false,
                            Name = "Filmlər"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 1, 12, 20, 36, 48, 848, DateTimeKind.Utc).AddTicks(9289),
                            IsDeleted = false,
                            Name = "gözəllik, Kompyuterlər & Kompyuterlər"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 1, 12, 20, 36, 48, 848, DateTimeKind.Utc).AddTicks(9314),
                            IsDeleted = false,
                            Name = "Səhiyyə, Avtomobil & Filmlər"
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2024, 1, 12, 20, 36, 48, 848, DateTimeKind.Utc).AddTicks(9336),
                            IsDeleted = false,
                            Name = "Geyim, Kompyuterlər & gözəllik"
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2024, 1, 12, 20, 36, 48, 848, DateTimeKind.Utc).AddTicks(9359),
                            IsDeleted = false,
                            Name = "Oyuncaqlar & turizm"
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2024, 1, 12, 20, 36, 48, 848, DateTimeKind.Utc).AddTicks(9369),
                            IsDeleted = false,
                            Name = "Oyuncaqlar"
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2024, 1, 12, 20, 36, 48, 848, DateTimeKind.Utc).AddTicks(9391),
                            IsDeleted = false,
                            Name = "Səhiyyə, turizm & Geyim"
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2024, 1, 12, 20, 36, 48, 848, DateTimeKind.Utc).AddTicks(9416),
                            IsDeleted = false,
                            Name = "садинструмент, gözəllik & turizm"
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2024, 1, 12, 20, 36, 48, 848, DateTimeKind.Utc).AddTicks(9437),
                            IsDeleted = true,
                            Name = "uşaq üçün & Avtomobil"
                        });
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Priorty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 1, 12, 20, 36, 48, 849, DateTimeKind.Utc).AddTicks(3756),
                            IsDeleted = false,
                            Name = "Electric",
                            ParentId = 0,
                            Priorty = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 1, 12, 20, 36, 48, 849, DateTimeKind.Utc).AddTicks(3758),
                            IsDeleted = false,
                            Name = "Moda",
                            ParentId = 0,
                            Priorty = 2
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 1, 12, 20, 36, 48, 849, DateTimeKind.Utc).AddTicks(3761),
                            IsDeleted = false,
                            Name = "Computers",
                            ParentId = 1,
                            Priorty = 1
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 1, 12, 20, 36, 48, 849, DateTimeKind.Utc).AddTicks(3763),
                            IsDeleted = false,
                            Name = "Women",
                            ParentId = 2,
                            Priorty = 1
                        });
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreateDate = new DateTime(2024, 1, 12, 20, 36, 48, 853, DateTimeKind.Utc).AddTicks(7062),
                            Description = "Temporibus accusantium culpa dicta libero.",
                            IsDeleted = false,
                            Title = "Cum."
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CreateDate = new DateTime(2024, 1, 12, 20, 36, 48, 853, DateTimeKind.Utc).AddTicks(7116),
                            Description = "Aperiam consequatur sint eveniet libero.",
                            IsDeleted = true,
                            Title = "At."
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            CreateDate = new DateTime(2024, 1, 12, 20, 36, 48, 853, DateTimeKind.Utc).AddTicks(7167),
                            Description = "Molestiae similique aperiam aut et.",
                            IsDeleted = false,
                            Title = "Qui."
                        });
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CreateDate = new DateTime(2024, 1, 13, 0, 36, 48, 859, DateTimeKind.Local).AddTicks(6609),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            Discount = 7.525327856442751m,
                            IsDeleted = false,
                            Price = 603.73m,
                            Title = "Möhtəşəm Polad Stol"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 3,
                            CreateDate = new DateTime(2024, 1, 13, 0, 36, 48, 859, DateTimeKind.Local).AddTicks(6858),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            Discount = 1.02058807237729156m,
                            IsDeleted = false,
                            Price = 271.63m,
                            Title = "Ergonomik Rezin Kulon"
                        });
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Detail", b =>
                {
                    b.HasOne("E_Commerce_Api.Domain.Entities.Category", "Category")
                        .WithMany("Details")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Product", b =>
                {
                    b.HasOne("E_Commerce_Api.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("E_Commerce_Api.Domain.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce_Api.Domain.Entities.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Category", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
