// <auto-generated />
using System;
using E_Commerce_Api.Persistance.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Commerce_Api.Persistance.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240112201526_test")]
    partial class test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CategoryProduct");
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 1, 12, 20, 15, 26, 622, DateTimeKind.Utc).AddTicks(5668),
                            IsDeleted = false,
                            Name = "Elektronika & gözəllik"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 1, 12, 20, 15, 26, 622, DateTimeKind.Utc).AddTicks(5839),
                            IsDeleted = false,
                            Name = "Ayyaqqabı & uşaq üçün"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 1, 12, 20, 15, 26, 622, DateTimeKind.Utc).AddTicks(5862),
                            IsDeleted = false,
                            Name = "Filmlər & musiqi"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 1, 12, 20, 15, 26, 622, DateTimeKind.Utc).AddTicks(5872),
                            IsDeleted = false,
                            Name = "oyunlar"
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2024, 1, 12, 20, 15, 26, 622, DateTimeKind.Utc).AddTicks(5891),
                            IsDeleted = false,
                            Name = "bəzək & Filmlər"
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2024, 1, 12, 20, 15, 26, 622, DateTimeKind.Utc).AddTicks(5922),
                            IsDeleted = false,
                            Name = "Ev, bəzək & Filmlər"
                        },
                        new
                        {
                            Id = 7,
                            CreateDate = new DateTime(2024, 1, 12, 20, 15, 26, 622, DateTimeKind.Utc).AddTicks(5940),
                            IsDeleted = false,
                            Name = "musiqi & musiqi"
                        },
                        new
                        {
                            Id = 8,
                            CreateDate = new DateTime(2024, 1, 12, 20, 15, 26, 622, DateTimeKind.Utc).AddTicks(6128),
                            IsDeleted = false,
                            Name = "Filmlər & Elektronika"
                        },
                        new
                        {
                            Id = 9,
                            CreateDate = new DateTime(2024, 1, 12, 20, 15, 26, 622, DateTimeKind.Utc).AddTicks(6182),
                            IsDeleted = false,
                            Name = "uşaq üçün, Filmlər & Avtomobil"
                        },
                        new
                        {
                            Id = 10,
                            CreateDate = new DateTime(2024, 1, 12, 20, 15, 26, 622, DateTimeKind.Utc).AddTicks(6208),
                            IsDeleted = true,
                            Name = "Filmlər & садинструмент"
                        });
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Priorty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 1, 12, 20, 15, 26, 623, DateTimeKind.Utc).AddTicks(1941),
                            IsDeleted = false,
                            Name = "Electric",
                            ParentId = 0,
                            Priorty = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 1, 12, 20, 15, 26, 623, DateTimeKind.Utc).AddTicks(1944),
                            IsDeleted = false,
                            Name = "Moda",
                            ParentId = 0,
                            Priorty = 2
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 1, 12, 20, 15, 26, 623, DateTimeKind.Utc).AddTicks(1946),
                            IsDeleted = false,
                            Name = "Computers",
                            ParentId = 1,
                            Priorty = 1
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 1, 12, 20, 15, 26, 623, DateTimeKind.Utc).AddTicks(1949),
                            IsDeleted = false,
                            Name = "Women",
                            ParentId = 2,
                            Priorty = 1
                        });
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreateDate = new DateTime(2024, 1, 12, 20, 15, 26, 627, DateTimeKind.Utc).AddTicks(9234),
                            Description = "Velit fugit unde eum quidem.",
                            IsDeleted = false,
                            Title = "Officiis."
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            CreateDate = new DateTime(2024, 1, 12, 20, 15, 26, 627, DateTimeKind.Utc).AddTicks(9290),
                            Description = "Vero non et rerum at.",
                            IsDeleted = true,
                            Title = "Animi."
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            CreateDate = new DateTime(2024, 1, 12, 20, 15, 26, 627, DateTimeKind.Utc).AddTicks(9343),
                            Description = "Qui maiores voluptatibus nemo quae.",
                            IsDeleted = false,
                            Title = "Corporis."
                        });
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CreateDate = new DateTime(2024, 1, 13, 0, 15, 26, 632, DateTimeKind.Local).AddTicks(6909),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            Discount = 8.146121774731867m,
                            IsDeleted = false,
                            Price = 402.42m,
                            Title = "Kobud Beton Kəmər"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 3,
                            CreateDate = new DateTime(2024, 1, 13, 0, 15, 26, 632, DateTimeKind.Local).AddTicks(7237),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            Discount = 9.013267865293903m,
                            IsDeleted = false,
                            Price = 32.00m,
                            Title = "İnanılmaz Pambıq Sviter"
                        });
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("E_Commerce_Api.Domain.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce_Api.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Detail", b =>
                {
                    b.HasOne("E_Commerce_Api.Domain.Entities.Category", "Category")
                        .WithMany("Details")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Product", b =>
                {
                    b.HasOne("E_Commerce_Api.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("E_Commerce_Api.Domain.Entities.Category", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
